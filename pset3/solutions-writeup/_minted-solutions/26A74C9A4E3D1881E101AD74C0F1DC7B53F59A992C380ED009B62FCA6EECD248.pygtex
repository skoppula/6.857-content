\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{l+s+sd}{\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}}
\PYGdefault{l+s+sd}{We need to determine if two samples are drawn from the same distribution. For this, we use the Kolmogorov\PYGdefaultZhy{}Smirnov test that can be used to test whether the two underlying probability distributions for two one\PYGdefaultZhy{}dimensional samples are different. This is what we desire when analyzing our two samples \PYGdefaultZob{}x\PYGdefaultZus{}1, x\PYGdefaultZus{}2, x\PYGdefaultZus{}3, ..., x\PYGdefaultZus{}n\PYGdefaultZcb{} and \PYGdefaultZob{}y\PYGdefaultZus{}1, y\PYGdefaultZus{}2, y\PYGdefaultZus{}3, ..., y\PYGdefaultZus{}n\PYGdefaultZcb{}. The KS test outputs a p\PYGdefaultZhy{}value, if below an appropriate threshold (e.g. 0.10), the samples are probably have different underlying distributions.}

\PYGdefault{l+s+sd}{For our implementation of Kolmogorov\PYGdefaultZhy{}Smirnov, we use the scipy.stats package.}

\PYGdefault{l+s+sd}{\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}}

\PYGdefault{k+kn}{from} \PYGdefault{n+nn}{scipy.stats} \PYGdefault{k+kn}{import} \PYGdefault{n}{ks\PYGdefaultZus{}2samp}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{numpy} \PYGdefault{k+kn}{as} \PYGdefault{n+nn}{np}

\PYGdefault{k}{def} \PYGdefault{n+nf}{run\PYGdefaultZus{}ks}\PYGdefault{p}{(}\PYGdefault{n}{lst1}\PYGdefault{p}{,} \PYGdefault{n}{lst2}\PYGdefault{p}{):}

    \PYGdefault{l+s+sd}{\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}Returns the p\PYGdefaultZhy{}value of a 2\PYGdefaultZhy{}sample Kolmogorov\PYGdefaultZhy{}Smirnov test\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}}

    \PYGdefault{n}{data1} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{array}\PYGdefault{p}{(}\PYGdefault{n}{lst1}\PYGdefault{p}{,} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{int32}\PYGdefault{p}{)}
    \PYGdefault{n}{data2} \PYGdefault{o}{=} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{array}\PYGdefault{p}{(}\PYGdefault{n}{lst2}\PYGdefault{p}{,} \PYGdefault{n}{np}\PYGdefault{o}{.}\PYGdefault{n}{int32}\PYGdefault{p}{)}

    \PYGdefault{k}{return} \PYGdefault{n}{ks\PYGdefaultZus{}2samp}\PYGdefault{p}{(}\PYGdefault{n}{data1}\PYGdefault{p}{,} \PYGdefault{n}{data2}\PYGdefault{p}{)[}\PYGdefault{l+m+mi}{0}\PYGdefault{p}{]}


\PYGdefault{l+s+sd}{\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}}
\PYGdefault{l+s+sd}{For our implementation of AES/Rijndael, we used a Python script based on an implementation by Bram Cohen: http://wiki.birth\PYGdefaultZhy{}online.de/snippets/python/aes\PYGdefaultZhy{}rijndael. We modified the script to take the number of rounds as an initialization parameter. Using this, we calculated two KS scores for each 0\PYGdefaultZlt{}r\PYGdefaultZlt{}21, where r is the number of rounds in our Rijndael: (1) the KS between the sample of distinct bytes in AES\PYGdefaultZus{}r=F(r,p,q) and AES\PYGdefaultZus{}10=F(10,p,q), and (2) the KS between the sample of distinct bytes in AES\PYGdefaultZus{}r=F(r,p,q) and a sample of random bytes of same size. To do this, we wrote the following script:}
\PYGdefault{l+s+sd}{\PYGdefaultZsq{}\PYGdefaultZsq{}\PYGdefaultZsq{}}


\PYGdefault{k+kn}{from} \PYGdefault{n+nn}{rijndael} \PYGdefault{k+kn}{import} \PYGdefault{n}{rijndael}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{os}
\PYGdefault{k+kn}{import} \PYGdefault{n+nn}{random}

\PYGdefault{n}{key\PYGdefaultZus{}128} \PYGdefault{o}{=} \PYGdefault{n}{os}\PYGdefault{o}{.}\PYGdefault{n}{urandom}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{16}\PYGdefault{p}{)}
\PYGdefault{n}{message} \PYGdefault{o}{=} \PYGdefault{n}{os}\PYGdefault{o}{.}\PYGdefault{n}{urandom}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{16}\PYGdefault{p}{)}
\PYGdefault{k}{print} \PYGdefault{l+s}{\PYGdefaultZsq{}Key is: \PYGdefaultZsq{}}\PYGdefault{p}{,} \PYGdefault{n}{key\PYGdefaultZus{}128}
\PYGdefault{k}{print} \PYGdefault{l+s}{\PYGdefaultZsq{}Message is: \PYGdefaultZsq{}}\PYGdefault{p}{,} \PYGdefault{n}{message}

\PYGdefault{k}{def} \PYGdefault{n+nf}{F}\PYGdefault{p}{(}\PYGdefault{n}{r}\PYGdefault{p}{,} \PYGdefault{n}{p}\PYGdefault{p}{,} \PYGdefault{n}{q}\PYGdefault{p}{,} \PYGdefault{n}{key}\PYGdefault{p}{,} \PYGdefault{n}{message}\PYGdefault{p}{):}

    \PYGdefault{n}{prefix} \PYGdefault{o}{=} \PYGdefault{n}{message}\PYGdefault{p}{[:}\PYGdefault{n}{p}\PYGdefault{p}{]}
    \PYGdefault{n}{suffix} \PYGdefault{o}{=} \PYGdefault{n}{message}\PYGdefault{p}{[}\PYGdefault{n}{p}\PYGdefault{o}{+}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{:]}

    \PYGdefault{n}{S}\PYGdefault{p}{,} \PYGdefault{n}{T} \PYGdefault{o}{=} \PYGdefault{n+nb}{set}\PYGdefault{p}{(),} \PYGdefault{n+nb}{list}\PYGdefault{p}{()}
    \PYGdefault{k}{for} \PYGdefault{n}{i} \PYGdefault{o+ow}{in} \PYGdefault{n+nb}{xrange}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{256}\PYGdefault{p}{):}
        \PYGdefault{n}{S}\PYGdefault{o}{.}\PYGdefault{n}{add}\PYGdefault{p}{(}\PYGdefault{n}{prefix} \PYGdefault{o}{+} \PYGdefault{n+nb}{chr}\PYGdefault{p}{(}\PYGdefault{n}{i}\PYGdefault{p}{)} \PYGdefault{o}{+} \PYGdefault{n}{suffix}\PYGdefault{p}{)}

    \PYGdefault{k}{for} \PYGdefault{n}{string} \PYGdefault{o+ow}{in} \PYGdefault{n}{S}\PYGdefault{p}{:}
        \PYGdefault{n}{aes\PYGdefaultZus{}obj} \PYGdefault{o}{=} \PYGdefault{n}{rijndael}\PYGdefault{p}{(}\PYGdefault{n}{key}\PYGdefault{p}{,} \PYGdefault{n}{block\PYGdefaultZus{}size} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{16}\PYGdefault{p}{,} \PYGdefault{n}{rounds} \PYGdefault{o}{=} \PYGdefault{n}{r}\PYGdefault{p}{)}
        \PYGdefault{n}{ciphertext} \PYGdefault{o}{=} \PYGdefault{n}{aes\PYGdefaultZus{}obj}\PYGdefault{o}{.}\PYGdefault{n}{encrypt}\PYGdefault{p}{(}\PYGdefault{n}{string}\PYGdefault{p}{)}
        \PYGdefault{n}{T}\PYGdefault{o}{.}\PYGdefault{n}{append}\PYGdefault{p}{(}\PYGdefault{n}{ciphertext}\PYGdefault{p}{[}\PYGdefault{n}{q}\PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{])}

    \PYGdefault{k}{return} \PYGdefault{n+nb}{len}\PYGdefault{p}{(}\PYGdefault{n+nb}{set}\PYGdefault{p}{(}\PYGdefault{n}{T}\PYGdefault{p}{)),} \PYGdefault{n}{T}
        
\PYGdefault{n}{p}\PYGdefault{p}{,}\PYGdefault{n}{q} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{3}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{10}
\PYGdefault{n}{F\PYGdefaultZus{}Y} \PYGdefault{o}{=} \PYGdefault{n}{F}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{10}\PYGdefault{p}{,} \PYGdefault{n}{p}\PYGdefault{p}{,} \PYGdefault{n}{q}\PYGdefault{p}{,} \PYGdefault{n}{key\PYGdefaultZus{}128}\PYGdefault{p}{,} \PYGdefault{n}{message}\PYGdefault{p}{)[}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{]}
\PYGdefault{n}{Y} \PYGdefault{o}{=} \PYGdefault{p}{[}\PYGdefault{n+nb}{ord}\PYGdefault{p}{(}\PYGdefault{n}{char}\PYGdefault{p}{)} \PYGdefault{k}{for} \PYGdefault{n}{char} \PYGdefault{o+ow}{in} \PYGdefault{n}{F\PYGdefaultZus{}Y}\PYGdefault{p}{]}

\PYGdefault{k}{for} \PYGdefault{n}{r} \PYGdefault{o+ow}{in} \PYGdefault{n+nb}{range}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{21}\PYGdefault{p}{)[}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{:]:}
    \PYGdefault{n}{F\PYGdefaultZus{}X} \PYGdefault{o}{=} \PYGdefault{n}{F}\PYGdefault{p}{(}\PYGdefault{n}{r}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{3}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{10}\PYGdefault{p}{,} \PYGdefault{n}{key\PYGdefaultZus{}128}\PYGdefault{p}{,} \PYGdefault{n}{message}\PYGdefault{p}{)[}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{]}
    \PYGdefault{n}{X} \PYGdefault{o}{=} \PYGdefault{p}{[}\PYGdefault{n+nb}{ord}\PYGdefault{p}{(}\PYGdefault{n}{char}\PYGdefault{p}{)} \PYGdefault{k}{for} \PYGdefault{n}{char} \PYGdefault{o+ow}{in} \PYGdefault{n}{F\PYGdefaultZus{}X}\PYGdefault{p}{]}
    \PYGdefault{n}{random\PYGdefaultZus{}bytes} \PYGdefault{o}{=} \PYGdefault{p}{[}\PYGdefault{n}{random}\PYGdefault{o}{.}\PYGdefault{n}{randint}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{0}\PYGdefault{p}{,}\PYGdefault{l+m+mi}{255}\PYGdefault{p}{)} \PYGdefault{k}{for} \PYGdefault{n}{\PYGdefaultZus{}} \PYGdefault{o+ow}{in} \PYGdefault{n+nb}{range}\PYGdefault{p}{(}\PYGdefault{n+nb}{len}\PYGdefault{p}{(}\PYGdefault{n}{X}\PYGdefault{p}{))]}
    \PYGdefault{k}{print} \PYGdefault{n}{r}\PYGdefault{p}{,} \PYGdefault{n}{run\PYGdefaultZus{}ks}\PYGdefault{p}{(}\PYGdefault{n}{X}\PYGdefault{p}{,} \PYGdefault{n}{Y}\PYGdefault{p}{),} \PYGdefault{n}{run\PYGdefaultZus{}ks}\PYGdefault{p}{(}\PYGdefault{n}{X}\PYGdefault{p}{,} \PYGdefault{n}{random\PYGdefaultZus{}bytes}\PYGdefault{p}{)}
    
\end{Verbatim}
